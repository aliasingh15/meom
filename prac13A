#decision tree....dataset for restaurent


import pandas as pd 
from sklearn.preprocessing import LabelEncoder 
from sklearn.tree import DecisionTreeClassifier, export_text 
from sklearn import tree 
import matplotlib.pyplot as plt 
# Step 1: Create the dataset 
data = { 
'Alt': ['Yes', 'Yes', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No'], 
'Bar': ['No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes'], 
'Fri': ['No', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'Yes', 'Yes'], 
'Hun': ['Yes', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes'], 
'Pat': ['Some', 'Full', 'Some', 'Full', 'Full', 'Some', 'None', 'Some', 'Some', 'Full'], 
'Price': [1200, 2500, 2200, 1245, 4300, 3400, 1000, 3200, 1000, 3400], 
'Rain': ['No', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes'], 
'Res': ['Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'No', 'Yes', 'No', 'No'], 
'Type': ['French', 'Thai', 'Burger', 'Thai', 'French', 'Italian', 'Burger', 'Thai', 'Burger', 
'Burger'], 
'Est': ['0-10', '30-60', '0-10', '30-60', '>60', '10-30', '0-10', '0-10', '0-10', '>60'], 
'Wait': ['Yes', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'Yes', 'Yes', 'No'] 
} 
df = pd.DataFrame(data) 
# Step 2: Encode categorical variables 
le = LabelEncoder() 
for col in df.columns:
    df[col] = le.fit_transform(df[col]) 
# Step 3: Split features and target 
X = df.drop('Wait', axis=1) 
y = df['Wait'] 
# Step 4: Build the Decision Tree 
clf = DecisionTreeClassifier(criterion='entropy', random_state=0) 
clf = clf.fit(X, y) 
# Step 5: Visualize the tree 
plt.figure(figsize=(15, 10)) 
tree.plot_tree(clf, feature_names=X.columns, class_names=['No', 'Yes'], filled=True) 
plt.title("Decision Tree for Restaurant Waiting Problem") 
plt.show() 
# Step 6: Print human-readable rules 
rules = export_text(clf, feature_names=list(X.columns)) 
print("\nClassification Rules:\n") 
print(rules)
