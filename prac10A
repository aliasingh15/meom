#feature scalling......standardlization,normalization
#prac10A


import pandas as pd 
from sklearn.preprocessing import StandardScaler, MinMaxScaler 
# Create DataFrame from the given data 
data = { 
"Make": ["Honda", "Honda", "Toyota", "Nissan", "Toyota", "Honda", "Ford", 
"Chevrolet", "Chevrolet", "Dodge", "Dodge"], 
"Model": ["Accord", "Accord", "Camry", "Altima", "Corolla", "Civic", "F-150", 
"Silverado", "Impala", "Charger", "Charger"], 
"Color": ["Red", "Blue", "Black", "Green", "Black", "White", "Black", "Green", 
"Silver", "Silver", "Silver"], 
"Mileage": [63512, 95135, 75006, 69847, 87278, 138789, 89073, 109231, 87675, 
34853, 58173], 
"Sell Price": [4000, 2500, 45000, 3826, 2224, 2723, 3950, 4959, 3791, 4349, 4252] 
} 
df = pd.DataFrame(data) 
# Extract only numerical columns 
numerical_features = df[['Mileage', 'Sell Price']] 
# 1. Standardization (Z-score) 
scaler_std = StandardScaler() 
standardized = scaler_std.fit_transform(numerical_features) 
df_standardized = pd.DataFrame(standardized, columns=['Mileage_Std', 
'SellPrice_Std']) 
# 2. Normalization (Min-Max) 
scaler_minmax = MinMaxScaler() 
normalized = scaler_minmax.fit_transform(numerical_features) 
df_normalized = pd.DataFrame(normalized, columns=['Mileage_Norm', 
'SellPrice_Norm']) 
# Combine all data 
df_combined = pd.concat([df, df_standardized, df_normalized], axis=1) 
# Display final DataFrame with scaled features 
print(df_combined) 
