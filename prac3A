#Decision tree....tennis
#prac3A

import pandas as pd 
from sklearn.tree import DecisionTreeClassifier 
from sklearn.preprocessing import LabelEncoder 
from sklearn.metrics import accuracy_score 
from sklearn.model_selection import train_test_split 
from sklearn import tree 
import matplotlib.pyplot as plt 
# Data from the image 
data = { 
'Outlook': ['Sunny', 'Sunny', 'Overcast', 'Rain', 'Rain', 'Overcast', 'Overcast', 'Sunny', 
'Sunny', 'Rain', 
'Sunny', 'Overcast', 'Overcast', 'Rain', 'Sunny', 'Overcast', 'Overcast', 'Rain', 
'Sunny', 'Rain'], 
'Wind': ['Weak', 'Strong', 'Weak', 'Weak', 'Weak', 'Strong', 'Weak', 'Weak', 'Strong', 
'Weak', 
'Strong', 'Strong', 'Weak', 'Strong', 'Strong', 'Strong', 'Weak', 'Strong', 'Weak', 
'Strong'], 
'PlayTennis': ['No', 'No', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'Yes', 
'Yes', 'Yes', 'Yes', 'No', 'Yes', 'Yes', 'Yes', 'No', 'No', 'Yes'] 
} 
# Convert to DataFrame 
df = pd.DataFrame(data) 
# Encode categorical variables 
le_outlook = LabelEncoder() 
le_wind = LabelEncoder() 
le_play = LabelEncoder() 
df['Outlook'] = le_outlook.fit_transform(df['Outlook']) 
df['Wind'] = le_wind.fit_transform(df['Wind']) 
df['PlayTennis'] = le_play.fit_transform(df['PlayTennis']) 
# Features and label 
X = df[['Outlook', 'Wind']] 
y = df['PlayTennis'] 
# Split dataset into training and test sets 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0) 
# Train Decision Tree model 
model = DecisionTreeClassifier(criterion='entropy', random_state=0) 
model.fit(X_train, y_train) 
# Predict and check accuracy 
y_pred = model.predict(X_test) 
accuracy = accuracy_score(y_test, y_pred) 
print("Predictions:", y_pred) 
print("Actual     :", list(y_test)) 
print(f"Accuracy: {accuracy * 100:.2f}%") 
# Visualize Decision Tree 
plt.figure(figsize=(12, 6)) 
tree.plot_tree(model, feature_names=['Outlook', 'Wind'], 
class_names=le_play.classes_, filled=True) 
plt.title("Decision Tree - PlayTennis") 
plt.show() 
