#logistic Regression on the iris dataset.....using Classification metrics
#prac7A


# Import required libraries 
import pandas as pd 
from sklearn.datasets import load_iris 
from sklearn.linear_model import LogisticRegression 
from sklearn.model_selection import train_test_split 
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score 
# Load the Iris dataset 
iris = load_iris() 
X = pd.DataFrame(iris.data, columns=iris.feature_names) 
y = iris.target 
# Convert to binary classification: Setosa vs Not-Setosa 
# Setosa = 0 in original target, so make it binary (1 if Setosa, 0 otherwise) 
y_binary = (y == 0).astype(int) 
# Split the dataset into training and testing sets 
X_train, X_test, y_train, y_test = train_test_split(X, y_binary, test_size=0.2, 
random_state=42) 
# Create and train the Logistic Regression model 
model = LogisticRegression() 
model.fit(X_train, y_train) 
# Predict on test data 
y_pred = model.predict(X_test) 
# Evaluate the model 
print("Confusion Matrix:") 
print(confusion_matrix(y_test, y_pred)) 
print("\nClassification Report:") 
print(classification_report(y_test, y_pred)) 
print("\nAccuracy Score:") 
print(accuracy_score(y_test, y_pred))
